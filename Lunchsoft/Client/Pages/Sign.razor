@page "/sign"

@inject NavigationManager NavigationManager
@code{
    string Name = "";
    string User = "";
    string Pass = "";
    string Age = "";
    int TypeFk = 3;
    string Result = "";
}
<style>
    .error-message {
        color: rgba(255, 0, 0, 0.7);
        font-weight: bold;
    }
</style>
<div class="h-screen w-full flex justify-center items-center">

    <div class="w-full max-w-sm p-4 bg-white border border-gray-200 rounded-lg shadow sm:p-6 md:p-8 dark:bg-gray-800 dark:border-gray-700">
        <div>
            <img src="/img/LunchSoft2.png" alt="Imagen" class="mb-2 mt-3 mx-auto" width="95" height="95" />
            <h5 class="text-xl font-medium text-gray-900 dark:text-white center">Registrate en LunchSoft</h5>
            <div class="mt-6">
                <label class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Usuario</label>
                <input @bind="User" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white" placeholder="Usuario" required>
            </div>

            <div class="mt-3">
                <label class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Nombre</label>
                <input @bind="Name" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white" placeholder="Nombre" required>
            </div>

            <div>
                <label class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Edad</label>
                <input @bind="Age" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white" placeholder="Edad" required/>

            </div>
            <div class="mt-3">
                <label class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Rol</label>
                <select @bind="TypeFk" class="block w-full p-2 text-sm text-gray-900 border border-gray-300 rounded-lg bg-gray-50 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500">
                    <option selected>Selecciona el rol</option>
                    <option value="1">Chef</option>
                    <option value="2">Mesero</option>
                    <option value="3">Cajero</option>
                </select>
            </div>

            <div class="mt-3">
                <label class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Contraseña</label>
                <input @bind="Pass" type="password" placeholder="••••••••" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white" required>
            </div>
            <button @onclick="Crear" class="w-full text-white mt-5 bg-sky-700 hover:bg-sky-800 focus:ring-4 focus:outline-none focus:ring-sky-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center">Crear cuenta</button>
            <div class="text-sm mt-4 font-medium text-gray-500 dark:text-gray-300 center">
                ¿Ya estas registrado? 
            </div>
            <a href="/login" class="text-sky-700 hover:underline center">Iniciar sesion</a>
            <h6 class="error-message center">@Result</h6>
        </div>
    </div>

</div>
@code {
    async Task Crear()
    {
        try
        {
            if (User == "" || Name == "" || Age == "" || Pass == "" || TypeFk == 0)
            {
                Result = "Por favor, complete todos los campos.";
            }
            else
            {
                var nuevoEmpleado = new Lunchsoft.Shared.Models.Empleados
                    {
                        User = User,
                        Name = Name,
                        Age = int.Parse(Age),
                        Pass = Pass,
                        TypeFk = TypeFk
                    };




                var resul = await Lunchsoft.Shared.Acceso.Empleados.CrearEmpleado(nuevoEmpleado);

                if (!resul)
                {
                    Result = "No se pudo crear el empleado.";
                    return;
                }
                    Result = "Empleado creado correctamente.";

                    if (TypeFk == 1)
                    {
                        NavigationManager.NavigateTo("/Jefe");
                    }
                    else if (TypeFk == 2)
                    {
                        NavigationManager.NavigateTo("/Mesas");
                    }
                    else if (TypeFk == 3)
                    {
                        NavigationManager.NavigateTo("/Factura");
                    }
            }
        }
        catch (Exception ex)
        {
            Result = "Error al crear el empleado.";
            Console.WriteLine("ER:" + ex.Message);
        }
    }
    void login()
    {
        NavigationManager.NavigateTo("/login");
    }
}