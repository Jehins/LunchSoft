@page "/registro"

@using Lunchsoft.Shared.Acceso;

@code{
    string User = "";
    string Name = "";
    string Age = "";
    string Pass = "";
    int TypeFk = 3;
    string Visibilidad = "hidden";
    string Result = "";
}


@inject HttpClient httpClient
@inject NavigationManager NavigationManager

<style>
    body {
        background-color: #f5f5f5;
    }

    .content-select select {
        max-width: 250px;
        position: relative;
    }

    .content-select {
        display: inline-block;
        width: 100%;
        cursor: pointer;
        padding: 7px 10px;
        height: 42px;
        outline: 0;
        border: 0;
        border-radius: 0;
        background: #f0f0f0;
        color: #7b7b7b;
        font-size: 1em;
        color: #000000;
        font-family: 'Quicksand', sans-serif;
        border: 2px solid rgba(0,0,0,0.2);
        border-radius: 12px;
        position: relative;
        transition: all 0.25s ease;
    }

    .error-message {
        color: #FF0000;
        font-weight: bold;
    }
</style>
<center>
    <div style="padding: 20px; background-color: white" id="/register" class="hb">
    <img class="mb-4" src="./img/LunchSoft2.png" alt="" width="60" height="60">
    <h2 class="pt fontBold">Registrarse</h2>
    <div>
        <br>

        <div class="form-floating mt-1">
            <input @bind="User" type="text" class="form-control font" id="User" name="User" placeholder="Usuario" required="">
            <label class="fontBold" for="name">Usuario</label>
        </div>
        <div class="form-floating mt-1">
            <input @bind="Name" type="text" class="form-control font" id="Name" name="Name" placeholder="Nombre"
                   required="">
            <label class="fontBold" for="user">Nombre</label>
        </div>
        <div class="form-floating mt-1">
            <input @bind="Age" type="number" class="form-control font" id="Age" name="Age" placeholder="Edad"
                   required="">
            <label class="fontBold" for="user">Edad</label>
        </div>
        <div class="form-floating mt-1">
            <input @bind="Pass" type="password" class="form-control font" id="pass" name="pass" placeholder="Contraseña"
                   required="">
            <label class="fontBold" for="pass">Contraseña</label>
        </div>
            <select @bind="TypeFk" class="content-select mt-2">
                <option value="">Opciones de empleados</option>
                <option value="1">Jefe de Cocina</option>
                <option value="2">Mesero</option>
                <option value="3">Cajero</option>
            </select>
        <br>
        <div class="d-grid gap-2">
            <button @onclick="Crear" class="mt-3 w-100 btn btn-lg btn-primary fontBold" type="submit">Crear</button>
                <label class=" font" for="hola">¿Ya estas registrado?</label>
                <a class="font ml-1 link" @onclick="login">Login</a>
                <h6 class="error-message">@Result</h6>
        </div>
    </div>
</div>
</center>
@code {
    async Task Crear()
    {
        try
        {
            if (User == "" || Name == "" || Age == "" || Pass == "" || TypeFk == 0)
            {
                Result = "Por favor, complete todos los campos.";
            }
            else
            {
                var nuevoEmpleado = new Lunchsoft.Shared.Models.Empleados
                    {
                        User = User,
                        Name = Name,
                        Age = int.Parse(Age),
                        Pass = Pass,
                        TypeFk = TypeFk
                    };

                if (TypeFk == 1)
                {
                    NavigationManager.NavigateTo("/Jefe");
                }
                else if (TypeFk == 2)
                {
                    NavigationManager.NavigateTo("/Mesas");
                }
                else if (TypeFk == 3)
                {
                    NavigationManager.NavigateTo("/Factura");
                }
                var resul = await Empleados.CrearEmpleado(nuevoEmpleado);

                if (resul)
                {
                    Result = "Empleado creado correctamente.";
                }
                else
                {
                    Result = "No se pudo crear el empleado.";
                }
            }
        }
        catch (Exception ex)
        {
            Result = "Error al crear el empleado.";
            Console.WriteLine("ER:" + ex.Message);
        }
    }
    void login()
    {
        NavigationManager.NavigateTo("/login");
    }
}
