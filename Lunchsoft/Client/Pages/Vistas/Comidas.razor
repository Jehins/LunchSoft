@page "/Comidas"

@inject NavigationManager NavigationManager



<Lunchsoft.Client.Compartido.Navbar></Lunchsoft.Client.Compartido.Navbar>

<!--Titulo-->

<div class="Titulo">

    <h3 class="nombre text-center shadow-lg p-3 mb-5 bg-body-tertiary rounded">Comidas Principales</h3>
    <h3 class="nombre2 text-center fs-5 shadow-lg p-3 mb-5 bg-body-tertiary rounded">Aqui puedes añadir la informacion de la comida principal que quieres añadir para la vista del Mesero</h3>
    <div class="boton text-center ">
        <button type="button" class="btn btn-outline-primary shadow-lg rounded" data-bs-toggle="modal" data-bs-target="#staticBackdrop">Agregar una Comida</button>
    </div>
</div>

<!-- Modal -->

<div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="staticBackdropLabel">Agregar Informacion</h1>
                <button class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="input-group mb-3 ">
                    <input type="file" class="dato form-control" id="inputGroupFile02" @bind="Imagen">
                </div>
                <div class="form-floating mb-3">
                    <input type="text" class="dato form-control" id="floatingInput" placeholder="salchichas" @bind="Nombre">
                    <label for="floatingInput">Nombre de Comida</label>
                </div>
                <div class="form-floating mb-3">
                    <input type="text" class="dato form-control" id="floatingInput" placeholder="Contiene..." @bind="Descripcion">
                    <label for="floatingInput">Descripcion de Comida</label>
                </div>
                <div class="form-floating mb-3">
                    <input type="number" class="dato form-control" id="floatingInput" placeholder="5.000" min="50" @bind="Precio">
                    <label for="floatingInput">Precio de Comida</label>
                </div>
            </div>
            <div class="modal-footer">
                <button class="btn btn-outline-danger" data-bs-dismiss="modal">Cerrar</button>
                <button class="btn btn-outline-info" data-bs-dismiss="modal" @onclick="AgregarDato">Agregar</button>
            </div>
        </div>
    </div>
</div>

<!--Mostrar Informacion-->


@code { 
    
   

    bool modoEdicion = false;

    string Nombre = "";
    string Descripcion = "";
    string Precio = "";
    string Imagen = "";
    string Result = "";

    async Task AgregarDato()
    {
        try
        {
            if (Nombre == "" || Descripcion == "" || Precio == "" || Imagen == "")
            {
                Result = "Por favor, complete todos los campos.";
            }
            else
            {
                var nuevoMenu = new Lunchsoft.Shared.Models.Menus
                    {
                        Nombre = Nombre,
                        Imagen = Imagen,
                        Precio = int.Parse(Precio),
                        Descripcion = Descripcion
                    };
                var resul = await Lunchsoft.Shared.Acceso.Menus.CrearMenu(nuevoMenu);

                if (!resul)
                {
                    Result = "No se pudo crear el menu.";
                    return;
                }
                Result = "Menu creado correctamente.";

                LimpiarCampos();
            }
        }
        catch (Exception ex)
        {
            Result = "Error al crear el menu.";
            Console.WriteLine("ER:" + ex.Message);
        }
    }

            /*
            * 
            async void Mostrar()
            {
        try
    {
    if (Nombre == "" || Descripcion == "" || Precio == "" || Imagen == "")
    {
    Result = "Porfavor llene todos los campos";
    }
    else
    {
        var response = await Lunchsoft.Shared.Acceso.Menus.ObtenerMenu(Nombre, Descripcion, Precio, Imagen);

        if (response.Id <= 0)
            {
            Result = "Usuario o contraseña Incorrecta";
            return;
            }



        Console.WriteLine(response);
    }
    }
    catch (Exception ex)
            {
    Result = "Error al ingresar.";
    Console.WriteLine("ER:" + ex.Message);
        }
     }
     */

    void EditarDato()
    {
        Nombre = Nombre;
        Imagen = Imagen;
        Precio = Precio;
        Descripcion = Descripcion;
        modoEdicion = true;
    }

    void ActualizarDato()
    {
        Imagen = Imagen;
        Nombre = Nombre;
        Precio = Precio;
        Descripcion = Descripcion;
        LimpiarCampos();
        modoEdicion = false;
    }

            /*
    * async Task ActualizarDato()
    {
        try
        {
        if (Nombre == "" || Descripcion == "" || Precio == "" || Imagen == "")
    {
        Result = "Por favor, complete todos los campos.";
        }
            else
            {
                var menuActualizado = new Lunchsoft.Shared.Models.Menus
                {
                Nombre = nuevaNombre,
                Imagen = nuevaImagen,
                Precio = int.Parse(nuevoPrecio),
        Descripcion = nuevaDescripcion
        };
        var resul = await Lunchsoft.Shared.Acceso.Menus.ActualizarMenu(menuActualizado);

            if (!resul)
            {
            Result = "No se pudo crear el menu.";
        return;
        }
        Result = "Menu creado correctamente.";

    LimpiarCampos();
    }
    }
    catch (Exception ex)
    {
    Result = "Error al crear el menu.";
    Console.WriteLine("ER:" + ex.Message);
}
 }


 <div class="Muestra border border-primary shadow-lg p-3 mb-5 bg-body-tertiary rounded">
<div class="bloques-datos">
    <div class="mesa border border-primary shadow-lg p-3 bg-body-tertiary rounded">
        <button class="btn btn-outline-warning" data-bs-toggle="modal" data-bs-target="#staticBackdrop" @onclick="EditarDato">Editar</button>
        <button class="btn btn-outline-danger" @onclick="EliminarDato">Eliminar</button>
    </div>
</div>
</div>
*/
    

    void LimpiarCampos()
    {
        Imagen = string.Empty;
        Nombre = string.Empty;
        Precio = string.Empty;
        Descripcion = string.Empty;
    }


}



<!--Css-->
<style>
    body {
        background-color: #EDFEFF;
    }

    .Mover {
        margin-left: 777px;
        margin-right: 100px;
    }

    .Centro {
        margin-top: 5px;
    }

    .mesa {
        background-color: #A4C7BC;
        margin-bottom: 50px;
        margin-top: 100px;
        margin-left: 100px;
        margin-right: 100px;
        display: inline-block;
        text-align: center;
        margin: 20px;
    }

        .mesa img {
            width: 250px;
            height: 250px;
        }

    .nombrenav {
        color: #032C1F;
    }

    .Posicion {
        block-size: 10px;
        margin-top: 5px;
        margin-bottom: 5px;
        margin-right: 683px;
    }

    .Titulo {
        block-size: 250px;
        margin-top: 100px;
        margin-right: 300px;
        margin-left: 300px;
    }

    .Muestra {
        block-size: 700px;
        margin-top: 100px;
        margin-bottom: 100px;
        margin-right: 100px;
        margin-left: 100px;
    }

    .nombre {
        color: #009EFF;
        margin-left: 100px;
        margin-right: 100px;
        font-style: italic;
    }

    .nombre2 {
        color: #009EFF;
        margin-top: 50px;
        margin-left: 100px;
        margin-right: 100px;
        font-style: italic;
    }

    .boton {
        margin-top: 50px;
    }

    .block {
        border: 1px solid #ccc;
        border-radius: 5px;
        padding: 10px;
        margin-bottom: 10px;
        cursor: pointer;
    }

        .block.selected {
            background-color: #7FC0AC;
        }

</style>