@page "/Reserva"

@inject NavigationManager NavigationManager


<Lunchsoft.Client.Compartido.Navbar></Lunchsoft.Client.Compartido.Navbar>

<!--Titulo-->
<div class="Titulo">

    <h3 class="nombre2 text-center fs-5 shadow-lg p-3 mb-5 bg-body-tertiary rounded">Reserva</h3>
    <h3 class="nombre text-center shadow-lg p-3 mb-5 bg-body-tertiary rounded">Aqui puedes ver y añadir una reserva</h3>
</div>
<div class="flex justify-center">
<button type="button" class="block text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800 text-center" data-toggle="modal" data-target="#exampleModal">
  Ingresa una reserva
</button>
    </div>
<!-- Modal -->
<div class="modal fade mt-5" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
                <h5 class="modal-title text-gray-700 font-bold mb-2" id="exampleModalLabel">Realizar una reserva</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
                <label class="text-gray-700 font-bold mb-2">Numero de mesa:</label>
                <input type="text" @oninput="Mostra" @bind="Numero" class="w-full bg-white border border-gray-300 rounded-lg py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-indigo-500" placeholder="Numero de mesa" />
                <label for="datetime" class="text-gray-700 font-bold mb-2">Fecha y Hora:</label>
                <input type="datetime-local" @oninput="Mostra" @bind="Hora" id="datetime" name="datetime" class="w-full bg-white border border-gray-300 rounded-lg py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-indigo-500" placeholder="Fecha y hora" />
                <label class="text-gray-700 font-bold mb-2">Empleado:</label>
                <input type="text" @oninput="Mostra" @bind="EmpleadoFk" class="w-full bg-white border border-gray-300 rounded-lg py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-indigo-500" placeholder="Empleado" />
                <h5 class="mt-2">@Result</h5>
      </div>
      <div class="modal-footer">
                <button type="button" class="text-gray-500 bg-white hover:bg-gray-100 focus:ring-4 focus:outline-none focus:ring-blue-300 rounded-lg border border-gray-200 text-sm font-medium px-5 py-2.5 hover:text-gray-900 focus:z-10 dark:bg-gray-700 dark:text-gray-300 dark:border-gray-500 dark:hover:text-white dark:hover:bg-gray-600 dark:focus:ring-gray-600" data-dismiss="modal">Cerrar</button>
                <button type="button" @onclick="Crear" class="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">Guardar</button>
      </div>
    </div>
  </div>
</div>


<div class="p-2 bg-gray-100 rounded mx-64 mt-5">

    @if (reserva != null && reserva.Any())
    {
        <div class="relative overflow-x-auto">
            <table class="w-full text-sm text-left text-gray-500 ">
                <thead class="text-xs text-gray-700 uppercase">
                    <tr>
                        <th scope="col" class="px-6 py-3">
                            Numero de mesa
                        </th>
                        <th scope="col" class="px-6 py-3">
                            Fecha y Hora
                        </th>
                        <th scope="col" class="px-6 py-3">
                            Empleado
                        </th>
                        <th scope="col" class="px-6 py-3">
                            Acciones
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var reservas in reserva)
                    {
                        <tr class="bg-white rounded">
                            <th scope="row" class="px-6 py-4 font-medium text-gray-900">
                                @reservas.Numero
                            </th>
                            <td class="px-6 py-4">
                                @reservas.Hora
                            </td>
                            <td class="px-6 py-4">
                                @reservas.EmpleadoFk
                            </td>
                            <td class="px-6 py-4">
                                <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#staticBackdrop">Editar</button>
                                <button class="btn btn-danger" @onclick="() => Eliminar(reservas.Id)">Eliminar</button>
                                <h5>@muestra</h5>
                            </td>
                        </tr>

                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <div class="flex p-5 justify-center items-center">
            <label>No hay reservas</label>
        </div>
    }
</div>

@code {
    void Mostra()
    {
        Result = "";
        muestra = "";
        StateHasChanged();
    }

    string Numero = "";
    DateTime Hora;
    string EmpleadoFk = "";
    string Result = "";
    string muestra = "";

    async Task Crear()
    {
        try
        {
            if (Hora.Hour == 0 && Hora.Minute == 0)
            {
                Hora = DateTime.Now;
            }

            if (Numero == "" || Hora == DateTime.MinValue  || EmpleadoFk == "")
            {
                Result = "Complete todos los campos";
                StateHasChanged();
            }
            else
            {
                var nuevaReserva = new Lunchsoft.Shared.Models.Reserva
                    {
                        Numero = int.Parse(Numero),
                        Hora = Hora,
                        EmpleadoFk = int.Parse(EmpleadoFk)
                    };

                var resul = await Lunchsoft.Shared.Acceso.Reserva.CrearReserva(nuevaReserva);

                if (!resul)
                {
                    Result = "No se pudo crear la reserva.";
                    return;
                }
                else
                {
                    Result = "Reserva Creada con exito.";
                }
                StateHasChanged();
            }
        }
        catch
        {
            Result = "Error al crea la reserva.";
            StateHasChanged();
        }
    }

    public List<Shared.Models.Reserva>? reserva;

    protected override async Task OnInitializedAsync()
    {
        reserva = await Shared.Acceso.Reserva.Obtener();
    }

    async Task Eliminar(int reservaId)
    {
        var result = await Shared.Acceso.Reserva.EliminarReserva(reservaId);
        if (result)
        {
            muestra = "Se eliminó correctamente.";
        }
        else
        {
            muestra = "No se pudo eliminar.";
        }
        StateHasChanged();
    }
}

<style>
    body {
        background-color: #f2f2f2;
    }

    .Mover {
        margin-left: 755px;
        margin-right: 100px;
    }

    .Centro {
        margin-top: 5px;
    }

    .mesa {
        background-color: #A4C7BC;
        margin-bottom: 50px;
        margin-top: 100px;
        margin-left: 100px;
        margin-right: 100px;
        display: inline-block;
        text-align: center;
        margin: 20px;
    }

        .mesa img {
            width: 250px;
            height: 250px;
        }

    .nombrenav {
        color: #032C1F;
    }

    .Posicion {
        block-size: 10px;
        margin-top: 5px;
        margin-bottom: 5px;
        margin-right: 683px;
    }

    .Titulo {
        block-size: 250px;
        margin-top: 100px;
        margin-right: 300px;
        margin-left: 300px;
    }

    .nombre {
        color: #0096F1;
        margin-left: 100px;
        margin-right: 100px;
        font-style: italic;
    }

    .nombre2 {
        color: #0096F1;
        margin-top: 50px;
        margin-left: 100px;
        margin-right: 100px;
        font-style: italic;
    }

    .boton {
        margin-top: 50px;
    }

    .block {
        border: 1px solid #ccc;
        border-radius: 5px;
        padding: 10px;
        margin-bottom: 10px;
        cursor: pointer;
    }

        .block.selected {
            background-color: #7FC0AC;
        }

    .Muestra {
        block-size: auto;
        margin-top: auto;
        margin-bottom: 100px;
        margin-right: 100px;
        margin-left: 100px;
    }

    .nombre {
        color: #0096F1;
        margin-left: 100px;
        margin-right: 100px;
        font-style: italic;
    }

    .nombre2 {
        color: #0096F1;
        margin-top: 50px;
        margin-left: 100px;
        margin-right: 100px;
        font-style: italic;
    }

    .boton {
        margin-top: 50px;
    }

    .block {
        border: 1px solid #ccc;
        border-radius: 5px;
        padding: 10px;
        margin-bottom: 10px;
        cursor: pointer;
    }

        .block.selected {
            background-color: #7FC0AC;
        }

    .reserva-list-container {
        display: flex;
        flex-wrap: wrap;
        justify-content: space-around;
        padding: 20px;
    }

    .reserva-item {
        width: 300px;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 5px;
        text-align: center;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        margin-bottom: 20px;
    }

    .reserva-item-nombre {
        font-size: 20px;
        font-weight: bold;
        margin: 10px 0;
    }

    .reserva-item-precio {
        font-size: 18px;
        color: #007bff;
    }

    .reserva-item-descripcion {
        font-size: 14px;
    }
</style>